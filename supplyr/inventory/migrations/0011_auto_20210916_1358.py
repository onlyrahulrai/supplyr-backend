# Generated by Django 3.1.12 on 2021-09-16 08:28

from django.db import migrations, models
import django.db.models.deletion
import django_mysql.models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0010_auto_20210902_1820'),
    ]

    operations = [
        migrations.AddField(
            model_name='category',
            name='collection_type',
            field=django_mysql.models.EnumField(blank=True, choices=[('manual', 'Manual'), ('automated', 'Automated')], null=True),
        ),
        migrations.AddField(
            model_name='category',
            name='condition_type',
            field=django_mysql.models.EnumField(blank=True, choices=[('any', 'Any Rule Should Match'), ('all', 'All Rules Must Match')], null=True),
        ),
        migrations.CreateModel(
            name='AutoCategoryRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_name', django_mysql.models.EnumField(blank=True, choices=[('product_title', 'Product title'), ('product_category', 'Product category'), ('product_vendor', 'Product vendor'), ('product_tag', 'Product tag'), ('compare_at_price', 'Compare at price'), ('weight', 'Weight'), ('inventory_stock', 'Inventory stock'), ('variants_title', "Variant's title")], null=True)),
                ('attribute_value', models.CharField(max_length=100)),
                ('attribute_unit', django_mysql.models.EnumField(choices=[('mg', 'Milligram'), ('gm', 'Gram'), ('kg', 'Kilogram'), ('lbs', 'lbs')])),
                ('comparison_type', django_mysql.models.EnumField(blank=True, choices=[('is_equal_to', 'Is equal to'), ('is_not_equal_to', 'Is not equal to'), ('starts_with', 'Starts With'), ('ends_with', 'Ends with'), ('contains', 'Contains'), ('does_not_contain', 'Does not contain')], null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.category')),
            ],
        ),
    ]
